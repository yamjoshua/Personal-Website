{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yamjam/Documents/Portfolio/src/components/Projects/Projects.js\";\nimport React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport ProjectCard from \"./ProjectCards\";\nimport Particle from \"../Particle\";\nimport sodoku from \"../../Assets/Projects/Sodoku.png\";\nimport photo from \"../../Assets/Projects/photoInsights.png\";\nimport chat from \"../../Assets/Projects/chat.png\";\n\nfunction Projects() {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"project-section\",\n    children: [/*#__PURE__*/_jsxDEV(Particle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"project-heading\",\n        children: [\"My Recent \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"purple\",\n          children: \"Projects \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"white\"\n        },\n        children: \"Here is what I have been working on recently\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          justifyContent: \"center\",\n          paddingBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          className: \"project-card\",\n          children: /*#__PURE__*/_jsxDEV(ProjectCard, {\n            imgPath: photo,\n            isBlog: false,\n            title: \"PhotoInsights\",\n            description: \"Photo application that provides advanced insights into a user's tendencies when taking photos. Made with JHipster, React, and Spring Boot. The application strips the EXIF data off photographs such as FStop, Focal Length, and Shutter Speed and stores the data in a H2 database. The data is then analyzed and shown to the user in a graphical representation using ApexCharts.\",\n            link: \"https://youtu.be/RZazyAIFuno\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          className: \"project-card\",\n          children: /*#__PURE__*/_jsxDEV(ProjectCard, {\n            imgPath: sodoku,\n            isBlog: false,\n            title: \"Sodoku Solver\",\n            description: \"Using BackTracking, Minimum Remaining Value, Degree Heuristic, and Forward Checking to solve any Sodoku puzzle. Made in part as a project for my Junior year Artifical Intelligence course. It is able to solve any easy, medium, hard, or expert level puzzle from sodoku.com in under one second. It is written in Python and works by reading in a txt file and outputting a txt file with the solved puzzle.\",\n            link: \"https://github.com/yamjoshua/Sodoku\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          className: \"project-card\",\n          children: /*#__PURE__*/_jsxDEV(ProjectCard, {\n            imgPath: chat,\n            isBlog: false,\n            title: \"CryptoChat\",\n            description: \"A chat application that provides End-to-end encryption for chat messages. Mesages are encrypted with AES-CBC and stored on a mySQL database encrypted. If two users have the same key they will be able to decode each other's messages otherwise the messages will just appear as gibberish. Made with Flask, Pusher API, and hosted on PythonAnywhere for a short duration.\",\n            link: \"https://github.com/yamjoshua/CryptoChat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/yamjam/Documents/Portfolio/src/components/Projects/Projects.js"],"names":["React","Container","Row","Col","ProjectCard","Particle","sodoku","photo","chat","Projects","color","justifyContent","paddingBottom"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,KAAP,MAAkB,yCAAlB;AACA,OAAOC,IAAP,MAAiB,gCAAjB;;AAGA,SAASC,QAAT,GAAoB;AAClB,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,SAAS,EAAC,iBAA3B;AAAA,4BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,8CACY;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADZ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,cAAc,EAAE,QAAlB;AAA4BC,UAAAA,aAAa,EAAE;AAA3C,SAAZ;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,SAAS,EAAC,cAAtB;AAAA,iCACE,QAAC,WAAD;AACE,YAAA,OAAO,EAAEL,KADX;AAEE,YAAA,MAAM,EAAE,KAFV;AAGE,YAAA,KAAK,EAAC,eAHR;AAIE,YAAA,WAAW,EAAC,sXAJd;AAKE,YAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,SAAS,EAAC,cAAtB;AAAA,iCACE,QAAC,WAAD;AACE,YAAA,OAAO,EAAED,MADX;AAEE,YAAA,MAAM,EAAE,KAFV;AAGE,YAAA,KAAK,EAAC,eAHR;AAIE,YAAA,WAAW,EAAC,kZAJd;AAKE,YAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF,eAqBE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,SAAS,EAAC,cAAtB;AAAA,iCACE,QAAC,WAAD;AACE,YAAA,OAAO,EAAEE,IADX;AAEE,YAAA,MAAM,EAAE,KAFV;AAGE,YAAA,KAAK,EAAC,YAHR;AAIE,YAAA,WAAW,EAAC,+WAJd;AAKE,YAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD;;KA/CQC,Q;AAiDT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport ProjectCard from \"./ProjectCards\";\nimport Particle from \"../Particle\";\n\nimport sodoku from \"../../Assets/Projects/Sodoku.png\";\nimport photo from \"../../Assets/Projects/photoInsights.png\";\nimport chat from \"../../Assets/Projects/chat.png\";\n\n\nfunction Projects() {\n  return (\n    <Container fluid className=\"project-section\">\n      <Particle />\n      <Container>\n        <h1 className=\"project-heading\">\n          My Recent <strong className=\"purple\">Projects </strong>\n        </h1>\n        <p style={{ color: \"white\" }}>\n          Here is what I have been working on recently\n        </p>\n        <Row style={{ justifyContent: \"center\", paddingBottom: \"10px\" }}>\n          <Col md={4} className=\"project-card\">\n            <ProjectCard\n              imgPath={photo}\n              isBlog={false}\n              title=\"PhotoInsights\"\n              description=\"Photo application that provides advanced insights into a user's tendencies when taking photos. Made with JHipster, React, and Spring Boot. The application strips the EXIF data off photographs such as FStop, Focal Length, and Shutter Speed and stores the data in a H2 database. The data is then analyzed and shown to the user in a graphical representation using ApexCharts.\"\n              link=\"https://youtu.be/RZazyAIFuno\"\n            />\n          </Col>\n\n          <Col md={4} className=\"project-card\">\n            <ProjectCard\n              imgPath={sodoku}\n              isBlog={false}\n              title=\"Sodoku Solver\"\n              description=\"Using BackTracking, Minimum Remaining Value, Degree Heuristic, and Forward Checking to solve any Sodoku puzzle. Made in part as a project for my Junior year Artifical Intelligence course. It is able to solve any easy, medium, hard, or expert level puzzle from sodoku.com in under one second. It is written in Python and works by reading in a txt file and outputting a txt file with the solved puzzle.\"\n              link=\"https://github.com/yamjoshua/Sodoku\"\n            />\n          </Col>\n\n          <Col md={4} className=\"project-card\">\n            <ProjectCard\n              imgPath={chat}\n              isBlog={false}\n              title=\"CryptoChat\"\n              description=\"A chat application that provides End-to-end encryption for chat messages. Mesages are encrypted with AES-CBC and stored on a mySQL database encrypted. If two users have the same key they will be able to decode each other's messages otherwise the messages will just appear as gibberish. Made with Flask, Pusher API, and hosted on PythonAnywhere for a short duration.\"\n              link=\"https://github.com/yamjoshua/CryptoChat\"\n            />\n          </Col>\n\n          \n        </Row>\n      </Container>\n    </Container>\n  );\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}